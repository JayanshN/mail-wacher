# Multi-stage build for optimization
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Upgrade pip
RUN pip install --upgrade pip wheel

# Copy requirements
COPY requirements-docker.txt .

# Install dependencies to a local directory
RUN pip install --user --no-cache-dir \
    --timeout 1000 \
    --retries 5 \
    -r requirements-docker.txt

# Production stage
FROM python:3.11-slim

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder stage
COPY --from=builder /root/.local /root/.local

# Set working directory
WORKDIR /app

# Copy application code
COPY src/ ./src/
COPY config/ ./config/
COPY docker-entrypoint.py .

# Create volume mount point for attachments
RUN mkdir -p /app/attachments

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PATH=/root/.local/bin:$PATH
ENV TORCH_HOME=/tmp/torch

# Expose volume for attachments
VOLUME ["/app/attachments"]

# Run the interactive setup script
ENTRYPOINT ["python", "docker-entrypoint.py"]
